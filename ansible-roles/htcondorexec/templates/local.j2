# BEGIN ANSIBLE MANAGED BLOCK

# HTCondor configuration for Virtual Galaxy execution host
ETC = /etc/condor
CONDOR_HOST = {{ condor_master }}
ALLOW_WRITE = {{ condor_allowed_write }}
ALLOW_READ = $(ALLOW_WRITE)
ALLOW_ADMINISTRATOR = {{ condor_allowed_admin }}
ALLOW_NEGOTIATOR = $(ALLOW_ADMINISTRATOR)
ALLOW_CONFIG = $(ALLOW_ADMINISTRATOR)
ALLOW_DAEMON = $(ALLOW_ADMINISTRATOR)
ALLOW_OWNER = $(ALLOW_ADMINISTRATOR)
ALLOW_CLIENT = *
DAEMON_LIST = MASTER, SCHEDD, STARTD

FILESYSTEM_DOMAIN = bi.uni-freiburg.de
UID_DOMAIN = bi.uni-freiburg.de
TRUST_UID_DOMAIN = True
SOFT_UID_DOMAIN = True

# run with partitionable slots
CLAIM_PARTITIONABLE_LEFTOVERS = True
NUM_SLOTS = 1
NUM_SLOTS_TYPE_1 = 1
SLOT_TYPE_1 = 100%
SLOT_TYPE_1_PARTITIONABLE = True
ALLOW_PSLOT_PREEMPTION = False
STARTD.PROPORTIONAL_SWAP_ASSIGNMENT = True

{% if condor_enable_autoshutdown %}
# enable auto shutdown
STARTD_NOCLAIM_SHUTDOWN = 7 * 60
DEFAULT_MASTER_SHUTDOWN_SCRIPT = /sbin/halt
{% else %}
# enable auto shutdown
# no, don't, this version is for the BW-Cloud!
#STARTD_NOCLAIM_SHUTDOWN = 7 * 60
#DEFAULT_MASTER_SHUTDOWN_SCRIPT = /sbin/poweroff
{% endif %}

# allow some time for job retirement, after draining has been initiated
# NOTE that this value counts from job START TIME!
MAXJOBRETIREMENTTIME = ({{ condor_drain_delay }}) + ({{ condor_drain_grace }})
        
# new VMTimeToLive attribute
STARTD_ATTRS = $(STARTD_ATTRS) MaxShutdownTime VMTimeToLive
include command into $(ETC)/walltime.cfg : python $(ETC)/meta_walltime.py
MachineWalltime = ({{ condor_drain_delay }}) + ({{ condor_drain_grace }})
MaxShutdownTime = $(MachineStarttime) + $(MachineWalltime)
VMTimeToLive = \
  ifThenElse( IsUndefined($(MaxShutdownTime)), \
	      2147483647, \
	      ($(MaxShutdownTime:2147483647) - time()) \
	    )
# END ANSIBLE MANAGED BLOCK
